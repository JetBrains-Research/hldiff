{
  "language": "Java",
  "extensions": [".java"],
  "statements" : [
    {"id": 1, "type": "nested", "name": "AnonymousClassDeclaration"},
    {"id": 6, "type": "atomic", "name": "AssertStatement"},
    {"id": 8, "type": "nested", "name": "Block"},
    {"id": 10, "type": "atomic", "name": "BreakStatement"},
    {"id": 12, "type": "nested", "name": "CatchClause"},
    {"id": 15, "type": "nested", "name": "CompilationUnit"},
    {"id": 17, "type": "atomic", "name": "ConstructorInvocation"},
    {"id": 18, "type": "atomic", "name": "ContinueStatement"},
    {"id": 19, "type": "nested", "name": "DoStatement"},
    {"id": 21, "type": "atomic", "name": "ExpressionStatement"},
    {"id": 23, "type": "nested", "name": "FieldDeclaration"},
    {"id": 24, "type": "nested", "name": "ForStatement"},
    {"id": 25, "type": "nested", "name": "IfStatement"},
    {"id": 26, "type": "atomic", "name": "ImportDeclaration"},
    {"id": 28, "type": "nested", "name": "Initializer"},
    {"id": 30, "type": "atomic", "name": "LabeledStatement"},
    {"id": 31, "type": "nested", "name": "MethodDeclaration"},
    {"id": 44, "type": "atomic", "name": "SingleVariableDeclaration"},
    {"id": 46, "type": "atomic", "name": "SuperConstructorInvocation"},
    {"id": 49, "type": "nested", "name": "SwitchCase"},
    {"id": 50, "type": "nested", "name": "SwitchStatement"},
    {"id": 51, "type": "nested", "name": "SynchronizedStatement"},
    {"id": 53, "type": "atomic", "name": "ThrowStatement"},
    {"id": 54, "type": "nested", "name": "TryStatement"},
    {"id": 55, "type": "nested", "name": "TypeDeclaration"},
    {"id": 59, "type": "atomic", "name": "VariableDeclarationFragment"},
    {"id": 60, "type": "atomic", "name": "VariableDeclarationStatement"},
    {"id": 61, "type": "nested", "name": "WhileStatement"},
    {"id": 70, "type": "nested", "name": "EnhancedForStatement"},
    {"id": 71, "type": "nested", "name": "EnumDeclaration"},
    {"id": 72, "type": "atomic", "name": "EnumConstantDeclaration"},
    {"id": 78, "type": "atomic", "name": "MarkerAnnotation"}
  ],
  "blockStatements" : [8, 28]
}